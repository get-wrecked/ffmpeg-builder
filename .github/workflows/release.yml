name: release

on:
  workflow_dispatch:
    inputs:
      run_id:
        required: true
        description: Run ID to generate release from
      release_name:
        required: true
        description: Release Name

jobs:
  release:
    runs-on: windows-2019
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.event.inputs.release_name }}

      - name: Upload artifacts as assets
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: ${{ github.event.inputs.run_id }},
            });
            for (const artifact of allArtifacts.data.artifacts)
            {
              let download = await github.rest.actions.downloadArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: artifact.id,
                archive_format: 'zip',
              });
              
              github.rest.repos.uploadReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                release_id: ${{ steps.create_release.outputs.id }},
                name: artifact.name + '.zip',
                data: download.data,
              });
            }
